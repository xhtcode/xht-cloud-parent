/*
 Navicat Premium Data Transfer

 Source Server         : 127.0.0.1-mysql
 Source Server Type    : MySQL
 Source Server Version : 80020
 Source Host           : localhost:3306
 Source Schema         : xht-cloud-generate

 Target Server Type    : MySQL
 Target Server Version : 80020
 File Encoding         : 65001

 Date: 12/12/2023 17:00:59
*/

SET NAMES utf8mb4;
SET FOREIGN_KEY_CHECKS = 0;

-- ----------------------------
-- Table structure for gen_code_base_class
-- ----------------------------
DROP TABLE IF EXISTS `gen_code_base_class`;
CREATE TABLE `gen_code_base_class`  (
  `id` varchar(36) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL COMMENT 'id',
  `class_name` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '类名',
  `package_name` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '包名',
  `ignore_field` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '忽略字段(写数据库字段)',
  `class_sort` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '排序',
  `del_flag` char(1) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '是否删除(0未删除1已经删除)',
  `create_by` varchar(64) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '创建者',
  `update_by` varchar(64) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '更新者',
  `create_time` datetime(0) NULL DEFAULT NULL COMMENT '创建时间',
  `update_time` datetime(0) NULL DEFAULT NULL COMMENT '更新时间',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8mb4 COLLATE = utf8mb4_0900_ai_ci COMMENT = '代码生成器-基类' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of gen_code_base_class
-- ----------------------------
INSERT INTO `gen_code_base_class` VALUES ('1600771423288070145', 'BasisVo', 'com.xht.cloud.common.web.vo', 'update_time,update_by,del_flag', '1', '0', NULL, 'admin', '2022-12-08 16:37:03', '2023-05-17 18:17:05');
INSERT INTO `gen_code_base_class` VALUES ('1600771423422287873', 'AbstractBasisEntity', 'com.xht.cloud.common.database.entity', '', '2', '0', NULL, 'admin', '2022-12-08 16:37:03', '2023-02-27 12:39:42');
INSERT INTO `gen_code_base_class` VALUES ('1600771423434870786', 'BasisEntity', 'com.xht.cloud.common.database.entity', 'id,create_time,update_time,create_by,update_by', '3', '0', NULL, 'admin', '2022-12-08 16:37:03', '2023-02-27 12:39:45');
INSERT INTO `gen_code_base_class` VALUES ('1600771423434870788', 'BasisTreeEntity', 'com.xht.cloud.common.database.entity', 'id,parent_id,create_time,update_time,create_by,update_by,del_flag', '5', '0', NULL, 'admin', '2022-12-08 16:37:03', '2023-04-12 18:18:00');
INSERT INTO `gen_code_base_class` VALUES ('1630065077865349121', 'BasePageRequest', 'com.xht.cloud.common.core.web.request', 'id,create_time,update_time,create_by,update_by,del_flag', '6', '0', 'admin', 'admin', '2023-02-27 12:39:34', '2023-04-12 18:17:56');
INSERT INTO `gen_code_base_class` VALUES ('1658782892124680193', 'AbstractVo', 'com.xht.cloud.common.web.vo', NULL, '1', '0', 'admin', 'admin', '2023-05-17 18:33:55', '2023-05-17 18:34:03');

-- ----------------------------
-- Table structure for gen_code_config
-- ----------------------------
DROP TABLE IF EXISTS `gen_code_config`;
CREATE TABLE `gen_code_config`  (
  `id` varchar(36) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL COMMENT 'id',
  `config_name` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '配置名称',
  `config_desc` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '配置描述',
  `config_sort` int(0) NULL DEFAULT NULL COMMENT '排序',
  `config_default` char(1) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '是否默认 1是',
  `config_info` longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL COMMENT '配置详情',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8mb4 COLLATE = utf8mb4_0900_ai_ci COMMENT = '代码生成器-配置中心' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of gen_code_config
-- ----------------------------
INSERT INTO `gen_code_config` VALUES ('1658796525365985281', 'xht-cloud-（单表）', 'springboot3+vue3+ts（单表）', 1, '1', '[{\"id\":\"-1\",\"label\":\"顶级文件夹\",\"expanded\":true,\"edit\":false,\"fileType\":\"0\",\"children\":[{\"id\":\"056fbb44-f87e-43aa-bd95-63e3bb9ad23b\",\"label\":\"{projectName}-api\",\"expanded\":true,\"edit\":false,\"fileType\":\"0\",\"children\":[{\"id\":\"4d62e83b-fc98-49bc-aca0-19be5b3fef0d\",\"label\":\"src\",\"expanded\":true,\"edit\":false,\"fileType\":\"0\",\"children\":[{\"id\":\"0105982f-0606-4fb7-87e9-363353e01f43\",\"label\":\"main\",\"expanded\":true,\"edit\":false,\"fileType\":\"0\",\"children\":[{\"id\":\"e707e0c1-c7e4-46e9-857d-613059efea1a\",\"label\":\"java\",\"expanded\":true,\"edit\":false,\"fileType\":\"0\",\"children\":[{\"id\":\"9fa379b3-9421-4254-902c-ba5e10bd63d5\",\"label\":\"{packageName}\",\"expanded\":true,\"edit\":false,\"fileType\":\"0\",\"children\":[{\"id\":\"183a2e7b-a00a-4da4-92d4-9a294115ca2e\",\"label\":\"{moduleLabel}\",\"expanded\":true,\"edit\":false,\"fileType\":\"0\",\"children\":[{\"id\":\"bc34bb03-722c-41b4-8c9c-e1d713426d9e\",\"label\":\"dto\",\"expanded\":true,\"edit\":false,\"fileType\":\"0\",\"children\":[]}]}]}]},{\"id\":\"6a0590e5-cd7e-44a1-af29-2c1f3b2bb134\",\"label\":\"resources\",\"expanded\":true,\"edit\":false,\"fileType\":\"0\",\"children\":[]}]}]}]},{\"id\":\"056fbb44-f87e-43aa-bd95-63e3bb9ad23c\",\"label\":\"{projectName}-service\",\"expanded\":true,\"edit\":false,\"fileType\":\"0\",\"children\":[{\"id\":\"4d62e83b-fc98-49bc-aca0-19be5b3fef0d\",\"label\":\"src\",\"expanded\":true,\"edit\":false,\"fileType\":\"0\",\"children\":[{\"id\":\"0105982f-0606-4fb7-87e9-363353e01f43\",\"label\":\"main\",\"expanded\":true,\"edit\":false,\"fileType\":\"0\",\"children\":[{\"id\":\"e707e0c1-c7e4-46e9-857d-613059efea1a\",\"label\":\"java\",\"expanded\":true,\"edit\":false,\"fileType\":\"0\",\"children\":[{\"id\":\"9fa379b3-9421-4254-902c-ba5e10bd63d5\",\"label\":\"{packageName}\",\"expanded\":true,\"edit\":false,\"fileType\":\"0\",\"children\":[{\"id\":\"e2039a0b-e6c2-4390-94fa-5c591acaf375\",\"label\":\"moudle\",\"expanded\":true,\"edit\":false,\"fileType\":\"0\",\"children\":[{\"id\":\"8b397697-de10-4bc6-a372-3ee60131a22f\",\"label\":\"{moduleLabel}\",\"expanded\":true,\"edit\":false,\"fileType\":\"0\",\"children\":[{\"id\":\"989917e3-29cf-4a9e-9bdf-c4163c300694\",\"label\":\"controller\",\"expanded\":true,\"edit\":false,\"fileType\":\"0\",\"children\":[{\"id\":\"acfbb5f9-6380-4c98-b5ce-0891cc12b02d\",\"label\":\"request\",\"expanded\":true,\"edit\":false,\"fileType\":\"0\",\"children\":[{\"id\":\"c233dd74-aeb9-4721-a4c7-10f5a10645d6\",\"label\":\"{className}QueryRequest.java\",\"desc\":\"查询Request接收对象\",\"templateId\":\"173232593926838272\",\"expanded\":true,\"edit\":false,\"fileType\":\"1\",\"children\":[]},{\"id\":\"5dfd4b45-a516-4ba8-a73b-0fcba3251de3\",\"label\":\"{className}UpdateRequest.java\",\"desc\":\"修改Request接收对象\",\"templateId\":\"17323259392683827237\",\"expanded\":true,\"edit\":false,\"fileType\":\"1\",\"children\":[]},{\"id\":\"5e78e1ab-5b5e-412c-afa2-1bc3017b792f\",\"label\":\"{className}CreateRequest.java\",\"desc\":\"添加Request接收对象\",\"templateId\":\"1732325939268382723\",\"expanded\":true,\"edit\":false,\"fileType\":\"1\",\"children\":[]}]},{\"id\":\"f225882e-8e9e-4d22-b513-9f777904db54\",\"label\":\"response\",\"expanded\":true,\"edit\":false,\"fileType\":\"0\",\"children\":[{\"id\":\"992e4d01-c841-427f-a238-9311f9f1b76b\",\"label\":\"{className}Response.java\",\"desc\":\"Reponse响应对象\",\"templateId\":\"1732325939268382724\",\"expanded\":true,\"edit\":false,\"fileType\":\"1\",\"children\":[]}]},{\"id\":\"0ad67fc2-0de9-44ce-9e5a-b02b16845a54\",\"label\":\"{className}Controller.java\",\"desc\":\"Controller\",\"templateId\":\"1732325937951371265\",\"expanded\":true,\"edit\":false,\"fileType\":\"1\",\"children\":[]}]},{\"id\":\"6e8e965c-5965-4189-aa11-248051f0d707\",\"label\":\"convert\",\"expanded\":true,\"edit\":false,\"fileType\":\"0\",\"children\":[{\"id\":\"ce8aa72e-a7a5-4733-a722-9bf0d97d530c\",\"label\":\"{className}Convert.java\",\"desc\":\"实体转换\",\"templateId\":\"1732325939075444737\",\"expanded\":true,\"edit\":false,\"fileType\":\"1\",\"children\":[]}]},{\"id\":\"0b3baee9-cb7b-454e-b5b6-baf17199a014\",\"label\":\"dao\",\"expanded\":true,\"edit\":false,\"fileType\":\"0\",\"children\":[{\"id\":\"17a2bd78-2f1f-4208-b3ff-7813bff57cfe\",\"label\":\"dataobject\",\"expanded\":true,\"edit\":false,\"fileType\":\"0\",\"children\":[{\"id\":\"59de504f-35d1-4e40-8fe5-a48d7d4b84ee\",\"label\":\"{className}DO.java\",\"desc\":\"数据库持久化对象\",\"templateId\":\"1732325939138359300\",\"expanded\":true,\"edit\":false,\"fileType\":\"1\",\"children\":[]}]},{\"id\":\"37fca4f3-2648-48cd-881e-f4a5f7f9e206\",\"label\":\"mapper\",\"expanded\":true,\"edit\":false,\"fileType\":\"0\",\"children\":[{\"id\":\"d6016f09-46e9-4306-887a-e80bb1502d28\",\"label\":\"{className}Mapper.java\",\"desc\":\"Mybatis 接口(dao)\",\"templateId\":\"1732325939201273859\",\"expanded\":true,\"edit\":false,\"fileType\":\"1\",\"children\":[]}]},{\"id\":\"5430b2f3-c741-4253-92d0-716deaad21d9\",\"label\":\"wrapper\",\"expanded\":true,\"edit\":false,\"fileType\":\"0\",\"children\":[{\"id\":\"21927689-a536-4b01-9e03-cd8c92da6e06\",\"label\":\"{className}Wrapper.java\",\"desc\":\"MyBatisPlus Wrapper构建器\",\"templateId\":\"1732325939402600451\",\"expanded\":true,\"edit\":false,\"fileType\":\"1\",\"children\":[]}]}]},{\"id\":\"13549b19-fe28-4b5c-bf55-b525ab54cdee\",\"label\":\"service\",\"expanded\":true,\"edit\":false,\"fileType\":\"0\",\"children\":[{\"id\":\"a939367f-c70e-426e-aab6-f61eded9e776\",\"label\":\"impl\",\"expanded\":true,\"edit\":false,\"fileType\":\"0\",\"children\":[{\"id\":\"e5df7f68-6d43-4cff-a09e-7292cdb74e2d\",\"label\":\"{className}ServiceImpl.java\",\"desc\":\"业务 实现类\",\"templateId\":\"1732325939268382725\",\"expanded\":true,\"edit\":false,\"fileType\":\"1\",\"children\":[]}]},{\"id\":\"5b2322bd-c31b-4698-b78d-9b41354aae2c\",\"label\":\"I{className}Service.java\",\"desc\":\"业务 接口\",\"templateId\":\"1732325939201273857\",\"expanded\":true,\"edit\":false,\"fileType\":\"1\",\"children\":[]}]},{\"id\":\"a5411da3-f3a3-463f-9f97-a17270e07a43\",\"label\":\"package-info.java\",\"desc\":\"包描述\",\"templateId\":\"1732325939268382722\",\"expanded\":true,\"edit\":false,\"fileType\":\"1\",\"children\":[]}]}]}]}]},{\"id\":\"6a0590e5-cd7e-44a1-af29-2c1f3b2bb134\",\"label\":\"resources\",\"expanded\":true,\"edit\":false,\"fileType\":\"0\",\"children\":[{\"id\":\"c48b39fa-a366-4f82-bb96-f0fe5b032f3c\",\"label\":\"mapper\",\"expanded\":true,\"edit\":false,\"fileType\":\"0\",\"children\":[{\"id\":\"3b52e86f-36be-46af-bafb-6e077c4545e8\",\"label\":\"{moduleLabel}\",\"expanded\":true,\"edit\":false,\"fileType\":\"0\",\"children\":[{\"id\":\"42011ddd-940e-433b-a902-31441c755bcc\",\"label\":\"{className}Mapper.xml\",\"desc\":\"mybatis 接口对应的xml对象\",\"templateId\":\"1732325939201273858\",\"expanded\":true,\"edit\":false,\"fileType\":\"1\",\"children\":[]}]}]}]}]},{\"id\":\"5ca573f2-dda1-48d1-bbfd-db2ed97efefc\",\"label\":\"test\",\"expanded\":true,\"edit\":false,\"fileType\":\"0\",\"children\":[{\"id\":\"acb8c2fe-33d7-4985-a3a8-676ce64f932d\",\"label\":\"java\",\"expanded\":true,\"edit\":false,\"fileType\":\"0\",\"children\":[{\"id\":\"e4a53e2a-7e70-4cb7-858c-c5c1623d4599\",\"label\":\"{packageName}\",\"expanded\":true,\"edit\":false,\"fileType\":\"0\",\"children\":[]}]},{\"id\":\"d78ab32b-0c18-4b64-b596-7580cfe620f6\",\"label\":\"resources\",\"expanded\":true,\"edit\":false,\"fileType\":\"0\",\"children\":[]}]}]}]},{\"id\":\"3b51e0f4-cb3f-4469-8091-b10efab32947\",\"label\":\"web\",\"expanded\":true,\"edit\":false,\"fileType\":\"0\",\"children\":[{\"id\":\"f44e1627-1536-49de-b207-d71342a2bea1\",\"label\":\"src\",\"expanded\":true,\"edit\":false,\"fileType\":\"0\",\"children\":[{\"id\":\"eccd3a98-50cc-48ca-ae63-8c6e642ab7c6\",\"label\":\"api\",\"expanded\":true,\"edit\":false,\"fileType\":\"0\",\"children\":[{\"id\":\"bec60c73-f127-4e97-be14-a6ac6672f205\",\"label\":\"{moduleName}\",\"expanded\":true,\"edit\":false,\"fileType\":\"0\",\"children\":[{\"id\":\"f5cf4ab7-0e36-430b-8fd0-108c2c3530e4\",\"label\":\"{moduleLabel}\",\"expanded\":true,\"edit\":false,\"fileType\":\"0\",\"children\":[{\"id\":\"5382feb6-d0da-4028-960e-1928761c4c54\",\"label\":\"api.ts\",\"desc\":\"api\",\"templateId\":\"1732325939335491587\",\"expanded\":true,\"edit\":false,\"fileType\":\"1\",\"children\":[]},{\"id\":\"50da02c3-401d-463d-83a2-a8064955a7e5\",\"label\":\"types.ts\",\"desc\":\"types\",\"templateId\":\"1732325939402600450\",\"expanded\":true,\"edit\":false,\"fileType\":\"1\",\"children\":[]}]}]}]},{\"id\":\"44f51966-8225-45fa-915d-3a747c97ac0c\",\"label\":\"views\",\"expanded\":true,\"edit\":false,\"fileType\":\"0\",\"children\":[{\"id\":\"57a987df-02e2-4fce-a278-029d96239807\",\"label\":\"{moduleName}\",\"expanded\":true,\"edit\":false,\"fileType\":\"0\",\"children\":[{\"id\":\"9c092f38-1564-402e-b43e-bdd8ce06d8e9\",\"label\":\"{moduleLabel}\",\"expanded\":true,\"edit\":false,\"fileType\":\"0\",\"children\":[{\"id\":\"85c7878a-a129-42d9-b371-8a1fa5444ffe\",\"label\":\"components\",\"expanded\":true,\"edit\":false,\"fileType\":\"0\",\"children\":[{\"id\":\"c99d0138-a42f-4b0f-9952-e655db3fa252\",\"label\":\"add-or-update.vue\",\"desc\":\"add-or-update\",\"templateId\":\"1732325939335491586\",\"expanded\":true,\"edit\":false,\"fileType\":\"1\",\"children\":[]}]},{\"id\":\"e66a53d6-f98f-40e2-a7b1-24eaab1c4365\",\"label\":\"index.vue\",\"desc\":\"index\",\"templateId\":\"1732325939402600449\",\"expanded\":true,\"edit\":false,\"fileType\":\"1\",\"children\":[]}]}]}]}]}]}]}]');

-- ----------------------------
-- Table structure for gen_code_group
-- ----------------------------
DROP TABLE IF EXISTS `gen_code_group`;
CREATE TABLE `gen_code_group`  (
  `id` varchar(36) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL,
  `group_name` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '组名称',
  `group_desc` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '组描述',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8mb4 COLLATE = utf8mb4_0900_ai_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of gen_code_group
-- ----------------------------
INSERT INTO `gen_code_group` VALUES ('1731893642481139714', '微服务1.0(java后端)', 'springboot3+vue3+ts');
INSERT INTO `gen_code_group` VALUES ('1731893736144142337', '微服务1.0(vue前端)', 'springboot3+vue3+ts');

-- ----------------------------
-- Table structure for gen_code_group_template
-- ----------------------------
DROP TABLE IF EXISTS `gen_code_group_template`;
CREATE TABLE `gen_code_group_template`  (
  `group_id` varchar(36) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL COMMENT '组id',
  `template_id` varchar(36) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL COMMENT '模板id',
  PRIMARY KEY (`template_id`, `group_id`) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8mb4 COLLATE = utf8mb4_0900_ai_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of gen_code_group_template
-- ----------------------------

-- ----------------------------
-- Table structure for gen_code_template
-- ----------------------------
DROP TABLE IF EXISTS `gen_code_template`;
CREATE TABLE `gen_code_template`  (
  `id` varchar(36) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL DEFAULT '0' COMMENT 'id',
  `group_id` varchar(36) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL COMMENT '分组id',
  `tel_name` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '模板名称',
  `tel_remark` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '模板描述',
  `tel_content` longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL COMMENT '模板内容',
  `tel_file_type` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '模板生成文件类型',
  `file_name` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '模板生成名称',
  `ignore_field` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '忽略字段支持spring的spel表达式',
  `tel_status` char(1) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT '0' COMMENT '状态(0禁用1启用)',
  `tel_sort` int(0) NULL DEFAULT NULL COMMENT '排序',
  `create_by` varchar(64) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '创建者',
  `update_by` varchar(64) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '更新者',
  `create_time` datetime(0) NULL DEFAULT NULL COMMENT '创建时间',
  `update_time` datetime(0) NULL DEFAULT NULL COMMENT '更新时间',
  `del_flag` char(1) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT '1',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8mb4 COLLATE = utf8mb4_0900_ai_ci COMMENT = '代码生成器-代码模板' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of gen_code_template
-- ----------------------------
INSERT INTO `gen_code_template` VALUES ('1732325937951371265', '1731893642481139714', 'Controller', 'Controller', 'package ${packageName}.moudle.${moduleLabel}.controller;\n\nimport com.xht.cloud.framework.core.api.R;\nimport com.xht.cloud.framework.core.api.response.PageResponse;\nimport com.xht.cloud.framework.safety.repeat.RepeatSubmitLimit;\nimport com.xht.cloud.framework.web.validation.group.Create;\nimport com.xht.cloud.framework.web.validation.group.Update;\nimport ${packageName}.moudle.${moduleLabel}.controller.request.${className}CreateRequest;\nimport ${packageName}.moudle.${moduleLabel}.controller.request.${className}QueryRequest;\nimport ${packageName}.moudle.${moduleLabel}.controller.request.${className}UpdateRequest;\nimport ${packageName}.moudle.${moduleLabel}.controller.response.${className}Response;\nimport ${packageName}.moudle.${moduleLabel}.service.I${className}Service;\nimport io.swagger.v3.oas.annotations.Operation;\nimport io.swagger.v3.oas.annotations.Parameter;\nimport io.swagger.v3.oas.annotations.tags.Tag;\nimport lombok.RequiredArgsConstructor;\nimport lombok.extern.slf4j.Slf4j;\nimport org.springframework.security.access.prepost.PreAuthorize;\nimport org.springframework.validation.annotation.Validated;\nimport org.springframework.web.bind.annotation.DeleteMapping;\nimport org.springframework.web.bind.annotation.GetMapping;\nimport org.springframework.web.bind.annotation.PathVariable;\nimport org.springframework.web.bind.annotation.PostMapping;\nimport org.springframework.web.bind.annotation.PutMapping;\nimport org.springframework.web.bind.annotation.RequestBody;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RestController;\n\nimport java.util.List;\n\nimport static com.xht.cloud.framework.core.api.R.ok;\n\n/**\n * 描述 ：${moduleValue}\n *\n * @author : ${author}\n **/\n@Slf4j\n@RestController\n@RequestMapping(\"${pathUrl}\")\n@RequiredArgsConstructor\n@Tag(name = \"${moduleValue}\")\npublic class ${className}Controller {\n\n    private final I${className}Service ${classNameFirstLower}Service;\n\n    /**\n     * 创建:${moduleValue}\n     *\n     * @param createRequest {@link ${className}CreateRequest}\n     * @return {@link Boolean} true成功 false失败\n     */\n    @Operation(summary = \"创建-${moduleValue}\")\n    @PostMapping\n    @RepeatSubmitLimit\n    @PreAuthorize(\"@oauth2.hasAnyAuthority(\'${perms}:add\')\")\n    public R<Boolean> create(@Validated(Create.class) @RequestBody ${className}CreateRequest createRequest) {\n        ${classNameFirstLower}Service.create(createRequest);\n        return ok(true);\n    }\n\n    /**\n     * 根据id修改:${moduleValue}\n     *\n     * @param updateRequest {@link ${className}UpdateRequest}\n     * @return {@link Boolean} true成功 false失败\n     */\n    @Operation(summary = \"根据id修改-${moduleValue}\")\n    @PutMapping\n    @RepeatSubmitLimit\n    @PreAuthorize(\"@oauth2.hasAnyAuthority(\'${perms}:edit\')\")\n    public R<Boolean> update(@Validated(Update.class) @RequestBody ${className}UpdateRequest updateRequest) {\n        ${classNameFirstLower}Service.update(updateRequest);\n        return ok(true);\n    }\n\n    /**\n     * 根据id删除:${moduleValue}\n     *\n     * @param ids {@link List <String>} id集合\n     * @return {@link Boolean} true成功 false失败\n     */\n    @Operation(summary = \"根据id删除-${moduleValue}\")\n    @Parameter(name = \"id\", description = \"id\", required = true)\n    @DeleteMapping\n    @RepeatSubmitLimit\n    @PreAuthorize(\"@oauth2.hasAnyAuthority(\'${perms}:remove\')\")\n    public R<Boolean> remove(@RequestBody List<String> ids) {\n        ${classNameFirstLower}Service.remove(ids);\n        return ok(true);\n    }\n\n    /**\n     * 根据id查询:${moduleValue}详细\n     *\n     * @param id {@link String} 数据库主键\n     * @return {@link ${className}Response}\n     */\n    @Operation(summary = \"根据id查询详细-${moduleValue}\")\n    @Parameter(name = \"id\", description = \"id\", required = true)\n    @GetMapping(\"/{id}\")\n    public R<${className}Response> findById(@PathVariable(\"id\") String id) {\n        return ok(${classNameFirstLower}Service.findById(id));\n    }\n\n    /**\n     * 分页查询:${moduleValue}\n     *\n     * @param queryRequest {@link ${className}QueryRequest}\n     * @return {@link PageResponse<${className}Response>} 分页详情\n     */\n    @Operation(summary = \"分页查询-${moduleValue}\")\n    @GetMapping\n    public R<PageResponse<${className}Response>> findPage(${className}QueryRequest queryRequest) {\n        return ok(${classNameFirstLower}Service.findPage(queryRequest));\n    }\n\n}\n', 'java', '{className}Controller', '', '1', 5, 'admin', 'admin', '2023-12-06 17:24:29', '2023-12-06 17:24:29', '0');
INSERT INTO `gen_code_template` VALUES ('1732325939075444737', '1731893642481139714', '实体转换', '实体转换', 'package ${packageName}.moudle.${moduleLabel}.convert;\n\nimport com.baomidou.mybatisplus.core.metadata.IPage;\nimport com.xht.cloud.framework.core.api.response.PageResponse;\nimport com.xht.cloud.framework.mybatis.tool.PageTool;\nimport ${packageName}.moudle.${moduleLabel}.controller.request.${className}CreateRequest;\nimport ${packageName}.moudle.${moduleLabel}.controller.request.${className}QueryRequest;\nimport ${packageName}.moudle.${moduleLabel}.controller.request.${className}UpdateRequest;\nimport ${packageName}.moudle.${moduleLabel}.controller.response.${className}Response;\nimport ${packageName}.moudle.${moduleLabel}.dao.dataobject.${className}DO;\nimport org.mapstruct.IterableMapping;\nimport org.mapstruct.Mapper;\nimport org.mapstruct.Named;\n\nimport java.util.List;\nimport java.util.Objects;\n\n/**\n * 描述 ：${moduleValue}\n *\n * @author : ${author}\n **/\n@Mapper(componentModel = \"spring\")\npublic interface ${className}Convert {\n\n    /**\n     * {@link ${className}CreateRequest} to {@link ${className}DO}\n     */\n    @Named(value = \"createRequestToDo\")\n    ${className}DO toDO(${className}CreateRequest createRequest);\n\n    /**\n     * {@link ${className}UpdateRequest} to {@link ${className}DO}\n     */\n    @Named(value = \"updateRequestToDo\")\n    ${className}DO toDO(${className}UpdateRequest updateRequest);\n\n    /**\n     * {@link ${className}QueryRequest} to {@link ${className}DO}\n     */\n    @Named(value = \"queryRequestToDo\")\n    ${className}DO toDO(${className}QueryRequest queryRequest);\n\n    /**\n     * {@link ${className}DO} to {@link ${className}Response}\n     */\n    @Named(value = \"DoToResponse\")\n    ${className}Response toResponse(${className}DO testDO);\n\n\n    /**\n     * list转换 {@link ${className}DO} to {@link ${className}Response}\n     */\n    @Named(value = \"DoToResponseCollection\")\n    @IterableMapping(qualifiedByName = \"DoToResponse\")\n    List<${className}Response> toResponse(List<${className}DO> testDO);\n\n    /**\n     * 分页转换 {@link ${className}DO} to {@link ${className}Response}\n     */\n    default PageResponse<${className}Response> toPageResponse(IPage<${className}DO> iPage) {\n        if (Objects.nonNull(iPage)) {\n            PageResponse<${className}Response> pageResponse = PageTool.cloneEmpty(iPage);\n            pageResponse.setList(toResponse(iPage.getRecords()));\n            return pageResponse;\n        }\n        return PageTool.empty();\n    }\n\n}\n', 'java', '{className}Convert', '', '1', 4, 'admin', 'admin', '2023-12-06 17:24:29', '2023-12-06 17:24:29', '0');
INSERT INTO `gen_code_template` VALUES ('1732325939138359300', '1731893642481139714', '数据库持久化对象', '数据库持久化对象', 'package ${packageName}.moudle.${moduleLabel}.dao.dataobject;\n\nimport com.baomidou.mybatisplus.annotation.IdType;\nimport com.baomidou.mybatisplus.annotation.TableField;\nimport com.baomidou.mybatisplus.annotation.TableId;\nimport com.baomidou.mybatisplus.annotation.TableName;\nimport com.xht.cloud.framework.mybatis.core.dataobject.BaseDO;\nimport lombok.Data;\n\n#foreach($pkg in ${importClassNames})\n${pkg}\n#end\n\n/**\n * 描述 ：${moduleValue}\n *\n * @author : ${author}\n **/\n@Data\n@TableName(value = \"${tableName}\")\npublic class ${className}DO extends BaseDO {\n\n#foreach ($column in ${columns})\n    /**\n     * ${column.columnComment}\n     */\n#if(${column.columnName} == ${pkColumn.columnName})\n    @TableId(value = \"${column.columnName}\", type = IdType.ASSIGN_ID)\n#end\n#if(${column.pk} == \'0\')\n    @TableField(value = \"${column.columnName}\")\n#end\n    private ${column.columnJavaType} ${column.columnCodeName};\n\n#end\n}\n', 'java', '{className}DO', '', '1', 2, 'admin', 'admin', '2023-12-06 17:24:29', '2023-12-06 17:24:29', '0');
INSERT INTO `gen_code_template` VALUES ('1732325939201273857', '1731893642481139714', '业务 接口', '业务 接口', 'package ${packageName}.moudle.${moduleLabel}.service;\n\nimport com.xht.cloud.framework.core.api.response.PageResponse;\nimport ${packageName}.moudle.${moduleLabel}.controller.request.${className}CreateRequest;\nimport ${packageName}.moudle.${moduleLabel}.controller.request.${className}QueryRequest;\nimport ${packageName}.moudle.${moduleLabel}.controller.request.${className}UpdateRequest;\nimport ${packageName}.moudle.${moduleLabel}.controller.response.${className}Response;\n\nimport java.util.List;\n\n/**\n * 描述 ：${moduleValue}\n *\n * @author : ${author}\n **/\npublic interface I${className}Service{\n\n    /**\n     * 创建\n     *\n     * @param createRequest {@link ${className}CreateRequest}\n     * @return {@link String} 主键\n     */\n    String create(${className}CreateRequest createRequest);\n\n    /**\n     * 根据id修改\n     *\n     * @param updateRequest {@link ${className}UpdateRequest}\n     */\n    void update(${className}UpdateRequest updateRequest);\n\n    /**\n     * 删除\n     *\n     * @param ids {@link List<String>} id集合\n     */\n    void remove(List<String> ids);\n\n    /**\n     * 根据id查询详细\n     *\n     * @param id {@link String} 数据库主键\n     * @return {@link ${className}Response}\n     */\n    ${className}Response findById(String id);\n\n    /**\n     * 分页查询\n     * @param queryRequest {@link ${className}QueryRequest}\n     * @return {@link PageResponse<${className}Response>} 分页详情\n     */\n    PageResponse<${className}Response> findPage(${className}QueryRequest queryRequest);\n\n}\n', 'java', 'I{className}Service', '', '1', 4, 'admin', 'admin', '2023-12-06 17:24:29', '2023-12-06 17:24:29', '0');
INSERT INTO `gen_code_template` VALUES ('1732325939201273858', '1731893642481139714', 'mybatis 接口对应的xml对象', 'mybatis 接口对应的xml对象', '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE mapper PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\">\n\n<mapper namespace=\"${packageName}.module.${moduleLabel}.dao.mapper.${className}Mapper\">\n\n    <!-- 通用查询映射结果 -->\n    <resultMap id=\"BaseResultMap\" type=\"${packageName}.moudle.${moduleLabel}.dao.dataobject.${className}DO\">\n#foreach($field in ${columns})\n#if(${column.pk} == \'0\')##生成主键排在第一位\n        <id column=\"${field.columnName}\" property=\"${field.columnCodeName}\" />\n#end\n        <result column=\"${field.columnName}\" property=\"${field.columnCodeName}\" />\n#end\n    </resultMap>\n\n\n    <!-- 通用查询结果列 -->\n    <sql id=\"BaseColumnList\">\n#foreach($field in ${columns})\n        ${field.columnName}#if($foreach.hasNext),#end\n#end\n    </sql>\n\n</mapper>\n', 'xml', '{className}Mapper', '', '1', 3, 'admin', 'admin', '2023-12-06 17:24:29', '2023-12-06 17:24:29', '0');
INSERT INTO `gen_code_template` VALUES ('1732325939201273859', '1731893642481139714', 'Mybatis 接口(dao)', 'Mybatis 接口(dao)', 'package ${packageName}.moudle.${moduleLabel}.dao.mapper;\n\nimport com.xht.cloud.framework.mybatis.mapper.BaseMapperX;\nimport ${packageName}.moudle.${moduleLabel}.dao.dataobject.${className}DO;\nimport org.apache.ibatis.annotations.Mapper;\n\n/**\n * 描述 ：用户表\n *\n * @author : xht\n **/\n@Mapper\npublic interface ${className}Mapper extends BaseMapperX<${className}DO> {\n\n}\n', 'java', '{className}Mapper', '', '1', 3, 'admin', 'admin', '2023-12-06 17:24:29', '2023-12-06 17:24:29', '0');
INSERT INTO `gen_code_template` VALUES ('173232593926838272', '1731893642481139714', '查询Request接收对象', '查询Request接收对象', 'package ${packageName}.moudle.${moduleLabel}.controller.request;\n\nimport com.xht.cloud.framework.core.api.request.PageQueryRequest;\nimport io.swagger.v3.oas.annotations.media.Schema;\nimport lombok.Data;\n\n/**\n * 描述 ：${moduleValue}-查询请求信息\n *\n * @author : ${author}\n **/\n@Data\n@Schema(name = \"${className}QueryRequest(${moduleValue}-查询请求信息)\", description = \"${moduleValue}-查询请求信息\")\npublic class ${className}QueryRequest extends PageQueryRequest{\n\n#foreach ($column in ${queryColumns})\n    /**\n     * ${column.columnComment}\n     */\n    @Schema(description = \"${column.columnComment}\")\n    private ${column.columnJavaType} ${column.columnCodeName};\n\n#end\n            \n}\n', 'java', '{className}QueryRequest', '', '1', 5, 'admin', 'admin', '2023-12-06 17:24:29', '2023-12-06 17:24:29', '0');
INSERT INTO `gen_code_template` VALUES ('1732325939268382722', '1731893642481139714', '包描述', '包描述', '/**\n* 描述 ：${moduleName}\n*\n* @author : ${author}\n**/\npackage ${packageName}.moudle.${moduleLabel};\n', 'java', 'package-info', '', '1', 1, 'admin', 'admin', '2023-12-06 17:24:29', '2023-12-06 17:24:29', '0');
INSERT INTO `gen_code_template` VALUES ('1732325939268382723', '1731893642481139714', '添加Request接收对象', '添加Request接收对象', 'package ${packageName}.moudle.${moduleLabel}.controller.request;\n\nimport com.xht.cloud.framework.core.api.request.CreateRequest;\nimport io.swagger.v3.oas.annotations.media.Schema;\nimport lombok.Data;\n\n/**\n * 描述 ：${moduleValue}-增加请求信息\n *\n * @author : ${author}\n **/\n@Data\n@Schema(name = \"${className}CreateRequest(${moduleValue}-增加请求信息)\", description = \"${moduleValue}-增加请求信息\")\npublic class ${className}CreateRequest extends CreateRequest{\n\n#foreach ($column in ${saveColumns})\n    /**\n     * ${column.columnComment}\n     */\n    @Schema(description = \"${column.columnComment}\")\n    private ${column.columnJavaType} ${column.columnCodeName};\n\n#end\n            \n}\n', 'java', '{className}CreateRequest', '', '1', 5, 'admin', 'admin', '2023-12-06 17:24:29', '2023-12-06 17:24:29', '0');
INSERT INTO `gen_code_template` VALUES ('17323259392683827237', '1731893642481139714', '修改Request接收对象', '修改Request接收对象', 'package ${packageName}.moudle.${moduleLabel}.controller.request;\n\nimport com.xht.cloud.framework.core.api.request.UpdateRequest;\nimport io.swagger.v3.oas.annotations.media.Schema;\nimport lombok.Data;\n\n/**\n * 描述 ：${moduleValue}-增加请求信息\n *\n * @author : ${author}\n **/\n@Data\n@Schema(name = \"${className}CreateRequest(${moduleValue}-修改请求信息)\", description = \"${moduleValue}-修改请求信息\")\npublic class ${className}UpdateRequest extends UpdateRequest<${pkColumn.columnJavaType}> {\n\n#foreach ($column in ${editColumns})\n    /**\n     * ${column.columnComment}\n     */\n    @Schema(description = \"${column.columnComment}\")\n    private ${column.columnJavaType} ${column.columnCodeName};\n\n#end\n            \n}\n', 'java', '{className}UpdateRequest', '', '1', 5, 'admin', 'admin', '2023-12-06 17:24:29', '2023-12-06 17:24:29', '0');
INSERT INTO `gen_code_template` VALUES ('1732325939268382724', '1731893642481139714', 'Reponse响应对象', 'Reponse响应对象', 'package ${packageName}.moudle.${moduleLabel}.controller.response;\n\nimport com.xht.cloud.framework.core.api.response.Response;\nimport io.swagger.v3.oas.annotations.media.Schema;\nimport lombok.Data;\n\n/**\n * 描述 ：${moduleValue}\n *\n * @author : ${author}\n **/\n@Data\n@Schema(name = \"${className}Response(${moduleValue}-响应信息)\", description = \"${tableComment}\")\npublic class ${className}Response extends Response{\n\n#foreach ($column in ${listAndEditAndSaveIntersection})\n    /**\n     * ${column.columnComment}\n     */\n    @Schema(description = \"${column.columnComment}\")\n    private ${column.columnJavaType} ${column.columnCodeName};\n\n#end\n}\n', 'java', '{className}Response', '', '1', 5, 'admin', 'admin', '2023-12-06 17:24:29', '2023-12-06 17:24:29', '0');
INSERT INTO `gen_code_template` VALUES ('1732325939268382725', '1731893642481139714', '业务 实现类', '业务 实现类', 'package ${packageName}.moudle.${moduleLabel}.service.impl;\n\nimport com.baomidou.mybatisplus.core.metadata.IPage;\nimport com.xht.cloud.framework.core.api.response.PageResponse;\nimport com.xht.cloud.framework.exception.business.BizException;\nimport com.xht.cloud.framework.mybatis.tool.PageTool;\nimport ${packageName}.moudle.${moduleLabel}.controller.request.${className}CreateRequest;\nimport ${packageName}.moudle.${moduleLabel}.controller.request.${className}QueryRequest;\nimport ${packageName}.moudle.${moduleLabel}.controller.request.${className}UpdateRequest;\nimport ${packageName}.moudle.${moduleLabel}.controller.response.${className}Response;\nimport ${packageName}.moudle.${moduleLabel}.convert.${className}Convert;\nimport ${packageName}.moudle.${moduleLabel}.dao.dataobject.${className}DO;\nimport ${packageName}.moudle.${moduleLabel}.dao.mapper.${className}Mapper;\nimport ${packageName}.moudle.${moduleLabel}.dao.wrapper.${className}Wrapper;\nimport ${packageName}.moudle.${moduleLabel}.service.I${className}Service;\nimport lombok.RequiredArgsConstructor;\nimport lombok.extern.slf4j.Slf4j;\nimport org.springframework.stereotype.Service;\nimport org.springframework.transaction.annotation.Transactional;\n\nimport java.util.List;\nimport java.util.Objects;\n\n/**\n * 描述 ：${moduleValue}\n *\n * @author : ${author}\n **/\n@Slf4j\n@Service\n@RequiredArgsConstructor\npublic class ${className}ServiceImpl implements I${className}Service {\n\n    private final ${className}Mapper ${classNameFirstLower}Mapper;\n\n    private final ${className}Convert ${classNameFirstLower}Convert;\n\n    /**\n     * 创建\n     *\n     * @param createRequest {@link ${className}CreateRequest}\n     * @return {@link String} 主键\n     */\n    @Override\n    @Transactional(rollbackFor = Exception.class)\n    public String create(${className}CreateRequest createRequest) {\n        ${className}DO entity = ${classNameFirstLower}Convert.toDO(createRequest);\n        ${classNameFirstLower}Mapper.insert(entity);\n        return entity.${pkColumn.columnNameGet}();\n    }\n\n    /**\n     * 根据id修改\n     *\n     * @param updateRequest ${className}UpdateRequest\n     */\n    @Override\n    @Transactional(rollbackFor = Exception.class)\n    public void update(${className}UpdateRequest updateRequest) {\n        if (Objects.isNull(findById(updateRequest.${pkColumn.columnNameGet}()))) {\n            throw new BizException(\"修改的对象不存在！\");\n        }\n        ${classNameFirstLower}Mapper.updateById(${classNameFirstLower}Convert.toDO(updateRequest));\n    }\n\n    /**\n     * 删除\n     *\n     * @param ids {@link List<String>} id集合\n     */\n    @Override\n    @Transactional(rollbackFor = Exception.class)\n    public void remove(List<String> ids) {\n        ${classNameFirstLower}Mapper.deleteBatchIds(ids);\n    }\n\n    /**\n     * 根据id查询详细\n     *\n     * @param id {@link String} 数据库主键\n     * @return {@link ${className}Response}\n     */\n    @Override\n    public ${className}Response findById(String id) {\n        return ${classNameFirstLower}Convert.toResponse(${classNameFirstLower}Mapper.findById(id).orElse(null));\n    }\n\n    /**\n     * 分页查询\n     *\n     * @param queryRequest {@link ${className}QueryRequest}\n     * @return {@link PageResponse<${className}Response>} 分页详情\n     */\n    @Override\n    public PageResponse<${className}Response> findPage(${className}QueryRequest queryRequest) {\n        IPage<${className}DO> ${classNameFirstLower}IPage = ${classNameFirstLower}Mapper.selectPage(PageTool.getPage(queryRequest), ${className}Wrapper.getInstance().lambdaQuery(${classNameFirstLower}Convert.toDO(queryRequest)));\n        return ${classNameFirstLower}Convert.toPageResponse(${classNameFirstLower}IPage);\n    }\n\n}\n', 'java', '{className}ServiceImpl', '', '1', 4, 'admin', 'admin', '2023-12-06 17:24:29', '2023-12-06 17:24:29', '0');
INSERT INTO `gen_code_template` VALUES ('1732325939335491585', '1731893642481139714', 'Sql文件', 'Sql文件', '-- ------------------------------------------${moduleDesc}-----------------------------------------------------\r\n\r\n-- 菜单 sql\r\nINSERT INTO sys_menu\r\n(`id`, `parent_id`, `menu_type`, `menu_name`, `menu_path`, `menu_view_name`, `menu_view_path`, `menu_icon`, `menu_redirect`, `menu_active`, `menu_authority`, `menu_hidden`, `menu_status`, `menu_link`, `menu_cache`, `menu_full`, `menu_affix`, `menu_sort`, `del_flag`, `create_by`, `update_by`, `create_time`, `update_time`)\r\nVALUES\r\n(\'${id1}\', \'${menuParentId}\', \'C\', \'${tableComment}\', \'${url}\', \'${className}Index\', \'${indexPackage}\', \'MoreFilled\' , NULL, NULL, \'${perms}:list\', \'1\', \'1\', \'0\', \'0\', \'0\', \'0\', 1, \'0\', \'代码生成(${author})\', \'代码生成(${author})\', sysdate(), sysdate());\r\n\r\n\r\n-- 权限 sql 增删改是按钮级别前端后端都有权限控制，查询主要来自后端控制\r\nINSERT INTO sys_menu\r\n(`id`, `parent_id`, `menu_type`, `menu_name`, `menu_path`, `menu_view_name`, `menu_view_path`, `menu_icon`, `menu_redirect`, `menu_active`, `menu_authority`, `menu_hidden`, `menu_status`, `menu_link`, `menu_cache`, `menu_full`, `menu_affix`, `menu_sort`, `del_flag`, `create_by`, `update_by`, `create_time`, `update_time`)\r\nVALUES\r\n(\'${id3}\', \'${id1}\', \'B\', \'${tableComment}添加\', NULL, NULL, NULL, \'\', NULL, NULL, \'${perms}:add\', NULL, \'1\', NULL, NULL, NULL, NULL, 1, \'0\', \'代码生成(${author})\', \'代码生成(${author})\', sysdate(), sysdate());\r\nINSERT INTO sys_menu\r\n(`id`, `parent_id`, `menu_type`, `menu_name`, `menu_path`, `menu_view_name`, `menu_view_path`, `menu_icon`, `menu_redirect`, `menu_active`, `menu_authority`, `menu_hidden`, `menu_status`, `menu_link`, `menu_cache`, `menu_full`, `menu_affix`, `menu_sort`, `del_flag`, `create_by`, `update_by`, `create_time`, `update_time`)\r\nVALUES\r\n(\'${id4}\', \'${id1}\', \'B\', \'${tableComment}修改\', NULL, NULL, NULL, \'\', NULL, NULL, \'${perms}:edit\', NULL, \'1\', NULL, NULL, NULL, NULL, 1, \'0\', \'代码生成(${author})\', \'代码生成(${author})\', sysdate(), sysdate());\r\nINSERT INTO sys_menu\r\n(`id`, `parent_id`, `menu_type`, `menu_name`, `menu_path`, `menu_view_name`, `menu_view_path`, `menu_icon`, `menu_redirect`, `menu_active`, `menu_authority`, `menu_hidden`, `menu_status`, `menu_link`, `menu_cache`, `menu_full`, `menu_affix`, `menu_sort`, `del_flag`, `create_by`, `update_by`, `create_time`, `update_time`)\r\nVALUES\r\n(\'${id5}\', \'${id1}\', \'B\', \'${tableComment}删除\', NULL, NULL, NULL, \'\', NULL, NULL, \'${perms}:remove\', NULL, \'1\', NULL, NULL, NULL, NULL, 1, \'0\', \'代码生成(${author})\', \'代码生成(${author})\', sysdate(), sysdate());\r\n', 'java', 'sql', '', '1', 6, 'admin', 'admin', '2023-12-06 17:24:29', '2023-12-06 17:24:29', '0');
INSERT INTO `gen_code_template` VALUES ('1732325939335491586', '1731893736144142337', 'add-or-update', 'add-or-update.vm', '<template>\n  <el-dialog :close-on-click-modal=\"false\"\n             :title=\"addUpdatePageInit.title\"\n             v-model=\"addUpdatePageInit.visible\"\n             :before-close=\'close\'\n             append-to-body\n             align-center\n  >\n    <el-form ref=\"addUpdateFormRef\"\n             :model=\"addUpdateForm\"\n             :rules=\"rules\"\n             label-width=\"80px\"\n             v-loading=\"addUpdatePageInit.loading\"\n             element-loading-text=\"拼命加载中\">\n #foreach($column in $columns)\n      <el-row :gutter=\"20\">\n        <el-col :span=\"24\">\n          <el-form-item label=\"${column.describe}\" prop=\"${column.columnName}\">\n            <el-input v-model=\"addUpdateForm.${column.columnName}\" clearable placeholder=\"${column.describe}\"/>\n          </el-form-item>\n        </el-col>\n      </el-row>\n#end\n    </el-form>\n    <template #footer>\n      <el-button type=\"primary\" @click=\"submitForm\" :disabled=\"addUpdatePageInit.loading\">\n        {{ addUpdatePageInit.buttonTitle }}\n      </el-button>\n      <el-button @click=\"close\">取 消</el-button>\n    </template>\n  </el-dialog>\n</template>\n<script lang=\"ts\" setup name=\"${className}AddUpdate\">\nimport {get${className}ById, save${className}, update${className}} from \'${apiPackage}\'\nimport {reactive, ref, toRefs} from \'vue\'\nimport {FormInstance, FormRules} from \'element-plus\'\nimport Message from \'@/utils/message\'\nimport {${className}, ${className}Status} from \'${typesPackage}\'\nimport {errorFormParams} from \'@/utils/util\'\n\nconst state = reactive<${className}.AddUpdateReactive>({\n  addUpdatePageInit: {...${className}Status.defaultAddUpdatePageInit},\n  addUpdateForm: {...${className}Status.defaultAddUpdateForm},\n})\n\nconst rules = reactive<FormRules>(${className}Status.addUpdateFormRules)\nconst emit = defineEmits([\'success\'])\nconst addUpdateFormRef = ref<FormInstance>()\nconst {addUpdatePageInit, addUpdateForm} = toRefs<${className}.AddUpdateReactive>(state)\n\n\n/**\n * 打开显示\n */\nconst show = (id: string | null) => {\n  addUpdatePageInit.value.visible = true\n  getInfoById(id)\n}\n\n/**\n * 获取单表信息\n */\nconst getInfoById = async (id: string | null) => {\n  if (!id) return\n  addUpdatePageInit.value.loading = true\n  addUpdatePageInit.value.saveOrUpdate = false\n  await get${className}ById(id).then(response => {\n    const {data} = JSON.parse(JSON.stringify(response))\n    addUpdateForm.value = {...data}\n    addUpdatePageInit.value.title = \'修改${tableComment}\'\n    addUpdatePageInit.value.buttonTitle = \'修改\'\n  }).finally(() => {\n    addUpdatePageInit.value.loading = false\n  })\n}\n\n/**\n * 提交表单\n */\nconst submitForm = () => {\n  addUpdatePageInit.value.visible = true\n  addUpdateFormRef.value?.validate(async (valid) => {\n    if (valid) {\n      if (addUpdatePageInit.value.saveOrUpdate) {\n        //增加\n        await save${className}(addUpdateForm.value).then(_ => {\n          Message.success(\"新增${tableComment}成功\")\n          emit(\"success\");\n          close();\n        }).catch(err => {\n          errorFormParams(err, addUpdateFormRef, addUpdateForm)\n        }).finally(() => {\n          addUpdatePageInit.value.loading = false\n        })\n      } else {\n        //修改\n        await update${className}(addUpdateForm.value).then(_ => {\n          Message.success(\"修改${tableComment}成功\")\n          emit(\"success\");\n          close();\n        }).catch(err => {\n          errorFormParams(err, addUpdateFormRef, addUpdateForm)\n        }).finally(() => {\n          addUpdatePageInit.value.loading = false\n        })\n      }\n    } else {\n      addUpdatePageInit.value.loading = false\n      Message.error(\"表单校验未通过，请重新检查提交内容\");\n    }\n  })\n}\n\n/**\n * 关闭\n */\nconst close = () => {\n  addUpdateForm.value = {...${className}Status.defaultAddUpdateForm}\n  addUpdatePageInit.value = {...${className}Status.defaultAddUpdatePageInit}\n  addUpdateFormRef.value?.resetFields()\n}\n\ndefineExpose({\n  show,\n})\n</script>\n\n<style scoped>\n\n</style>\n', 'vue', 'add-or-update', 'id', '1', 4, 'admin', 'admin', '2023-12-06 17:24:29', '2023-12-06 17:24:29', '0');
INSERT INTO `gen_code_template` VALUES ('1732325939335491587', '1731893736144142337', 'api', 'api.vm', '/**\n * ${moduleValue}\n *\n * @author : ${author}\n **/\nimport request from \'@/utils/request\'\nimport { ${className} } from \'@/api/${moduleName}/${moduleLabel}/types\'\n\nconst baseURL = import.meta.env.VITE_APP_XHT_CLOUD_PREFIX\n\n/**\n * 保存/添加 ${moduleValue}\n * @param data 数据\n */\nexport const save${className} = (data: ${className}.AddUpdateForm) => {\n	return request({\n		baseURL,\n		url: \'${pathUrl}\',\n		method: \'post\',\n		headers: {\n			repeatSubmit: true\n		},\n		data: data\n	})\n}\n\n/**\n * 根据id删除 ${moduleValue}\n * @param ids\n */\nexport const delete${className}ById = (ids: string[]) => {\n	return request({\n		baseURL,\n		url: \'${pathUrl}\',\n		method: \'delete\',\n		headers: {\n			repeatSubmit: true\n		},\n		data: ids\n	})\n}\n\n/**\n * 修改 ${moduleValue}\n * @param data 数据\n */\nexport const update${className} = (data: ${className}.AddUpdateForm) => {\n	return request({\n		baseURL,\n		url: \'${pathUrl}\',\n		method: \'put\',\n		headers: {\n			repeatSubmit: true\n		},\n		data: data\n	})\n}\n\n/**\n * 根据Id查询 ${moduleValue}\n * @param id id\n */\nexport const get${className}ById = (id: string) => {\n	return request({\n		baseURL,\n		url: `${pathUrl}/${id}`,\n		method: \'get\',\n		headers: {}\n	})\n}\n\n/**\n * 分页查询 ${moduleValue}\n * @param data 数据\n */\nexport const get${className}Page = (data: ${className}.QueryFrom) => {\n	return request({\n		baseURL,\n		url: \'${pathUrl}\',\n		method: \'get\',\n		headers: {},\n		params: data\n	})\n}\n', 'ts', 'api', '', '1', 1, 'admin', 'admin', '2023-12-06 17:24:29', '2023-12-06 17:24:29', '0');
INSERT INTO `gen_code_template` VALUES ('1732325939402600449', '1731893736144142337', 'index', 'index.vm', '<template>\n  <div class=\"app-container\">\n    <el-form :inline=\"true\" :model=\"queryParams\" ref=\"queryFormRef\" size=\"default\" label-width=\"68px\"\n             v-if=\"pageInit.showSearch\">\n#foreach($column in $columns)\n      <el-form-item label=\"${column.describe}\" prop=\"${column.columnName}\">\n        <el-input v-model=\"queryParams.${column.columnName}\" clearable placeholder=\"${column.describe}\"/>\n      </el-form-item>\n#end\n      <el-form-item>\n        <el-button class=\"el-button el-button--primary el-button--mini\" icon=\"search\" size=\"small\"\n                   @click=\"handleQuery\">查询\n        </el-button>\n        <el-button class=\"el-button el-button--default el-button--mini\" icon=\"refresh\" size=\"small\"\n                   @click=\"resetQuery\">重置\n        </el-button>\n      </el-form-item>\n    </el-form>\n    <el-row :gutter=\"10\" class=\"mb8\">\n      <el-col :span=\"1.5\">\n        <el-button type=\"primary\" icon=\"plus\" size=\"small\" @click=\"handleAdd\" v-auth=\"\'${perms}:add\'\">增加</el-button>\n      </el-col>\n      <el-col :span=\"1.5\">\n        <el-button type=\"success\" icon=\"edit\" size=\"small\" :disabled=\"pageInit.single\" @click=\"handleUpdate\" v-auth=\"\'${perms}:edit\'\">修改\n        </el-button>\n      </el-col>\n      <el-col :span=\"1.5\">\n        <el-button type=\"danger\" icon=\"delete\" size=\"small\" :disabled=\"pageInit.multiple\" @click=\"handleDelete\" v-auth=\"\'${perms}:remove\'\">删除\n        </el-button>\n      </el-col>\n      <RightToolbar v-model:showSearch=\"pageInit.showSearch\" @queryTable=\"handleQuery\"></RightToolbar>\n    </el-row>\n    <el-table v-loading=\"pageInit.loading\"\n              :data=\"tableList\"\n              ref=\"tableRef\"\n              @sort-change=\"handleQuery\"\n              @selection-change=\"handleSelectionChange\"\n              empty-text=\"暂无系统角色\">\n      <el-table-column type=\"selection\" width=\"55\" align=\"center\"/>\n      <el-table-column label=\"序号\" type=\"index\" width=\"50\" align=\"center\">\n        <template #default=\"scope\">\n          <span>{{ (queryParams.current - 1) * queryParams.size + scope.$index + 1 }}</span>\n        </template>\n      </el-table-column>\n#foreach($column in $columns)\n      <el-table-column label=\"${column.describe}\" prop=\"${column.columnName}\" sortable/>\n#end\n      <el-table-column label=\"操作\" width=\"260px\" align=\"center\" class-name=\"small-padding fixed-width\">\n        <template #default=\"scope\">\n          <el-button link icon=\"edit\" @click=\"handleUpdate(scope.row)\" type=\"success\" v-auth=\"\'${perms}:edit\'\">编辑</el-button>\n          <el-button link icon=\"delete\" @click=\"handleDelete(scope.row)\" type=\"danger\" v-auth=\"\'${perms}:remove\'\">删除</el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n    <Pagination v-model:total=\'pageInit.total\' v-model:page=\'queryParams.current\' v-model:limit=\'queryParams.size\'\n                @pagination=\'handleQuery\'/>\n    <add-or-update ref=\"addUpdateRef\" @success=\"handleQuery\"/>\n  </div>\n</template>\n\n<script lang=\"ts\" setup name=\"${className}Index\">\nimport {delete${className}ById, get${className}Page} from \'${apiPackage}\'\nimport AddOrUpdate from \'${addOrUpdatePackage}.vue\'\nimport {reactive, ref, toRefs} from \'vue\'\nimport {FormInstance} from \'element-plus\'\nimport {${className}, ${className}Status} from \'${typesPackage}\'\nimport {toReactive} from \'@vueuse/core\'\nimport Message from \'@/utils/message\'\nimport {pageParams} from \'@/utils/util\'\n\nconst state = reactive<${className}.Reactive>({\n  pageInit: {...${className}Status.defaultPageInit},\n  queryParams: {\n    descName: \'id\', //排序字段\n  }, //查询参数\n  tableList: [], //表格数据\n})\nconst {queryParams, pageInit} = toReactive(state)\nconst {tableList} = toRefs(state)\nconst queryFormRef = ref<FormInstance>()\nconst addUpdateRef = ref<any>()\nconst tableRef = ref<any>()\n\n/**\n * 多选框选中数据\n * @param selection 选中信息\n */\nconst handleSelectionChange = (selection: ${className}.Options[]) => {\n  pageInit.ids = selection.map((item: ${className}.Options) => item.id)\n  pageInit.single = selection.length !== 1\n  pageInit.multiple = !selection.length\n}\n\n/**\n * 重置表单\n */\nconst resetQuery = () => {\n  queryFormRef.value?.resetFields();\n  tableRef.value?.clearSort()\n  queryParams.ascName = \'\'\n  queryParams.descName = \'\'\n  handleQuery();\n}\n\n/**\n * 搜索按钮操作\n */\nconst handleQuery = async (data?: any) => {\n  pageInit.loading = true\n  pageParams(queryParams, data)\n  await get${className}Page(queryParams).then(res => {\n    tableList.value = res.data.list\n    pageInit.total = res.data.total;\n  }).finally(() => {\n    pageInit.loading = false\n  })\n}\n\n/**\n * 添加按钮操作\n */\nconst handleAdd = () => {\n  addUpdateRef.value.show(null)\n}\n\n/**\n * 修改按钮操作\n * @param row 当前行信息、按钮本身信息\n */\nconst handleUpdate = (row: ${className}.Options) => {\n  addUpdateRef.value.show(row.id || (pageInit.ids as string[])[0])\n}\n\n/**\n * 删除按钮操作\n * @param row 当前行信息\n */\nconst handleDelete = (row: ${className}.Options) => {\n  pageInit.loading = true\n  Message.confirmWarning(\'此操作将永久删除, 是否继续?\').then(async () => {\n    let reqIds = row?.id ? [row.id] : pageInit.ids\n    await delete${className}ById(reqIds as any[]).then(() => {\n      handleQuery()\n      Message.success(\'删除成功!\')\n    })\n  }).catch(() => {\n    pageInit.loading = false\n  })\n}\n\nhandleQuery()\n\n</script>\n\n<style lang=\"scss\" scoped>\n\n</style>\n', 'vue', 'index', 'id', '1', 3, 'admin', 'admin', '2023-12-06 17:24:29', '2023-12-06 17:24:29', '0');
INSERT INTO `gen_code_template` VALUES ('1732325939402600450', '1731893736144142337', 'types', 'types.vm', '/**\n * <h1>${moduleValue}</h1>\n *\n * 描述 ： ts 类型声明\n *\n * @author : ${author}\n **/\nimport { FormRules } from \'element-plus\'\n\nexport namespace ${className} {\n    /**\n     * 列表页面 页面配置参数\n     */\n    export interface PageInit extends CRUD.PageInit {}\n\n    /**\n     *  列表页面 表单查询参数\n     */\n    export interface QueryFrom extends CRUD.QueryFrom {\n#foreach($column in $queryColumns)\n        ${column.columnName}?: ${column.columnTsType} // $column.columnComment\n#end\n    }\n\n    /**\n     *  列表页面 列表类型\n     */\n    export interface Options extends CRUD.Options {\n#foreach($column in $listColumns)\n        ${column.columnName}: ${column.columnTsType} // $column.columnComment\n#end\n    }\n\n    /**\n     * 增改页面 页面参数\n     */\n    export interface AddUpdatePageInit extends CRUD.AddUpdatePageInit {}\n\n    /**\n     * 增改页面 表单类型\n     */\n    export interface AddUpdateForm extends CRUD.AddUpdateForm {\n#foreach($column in $editAndSaveIntersectionColumns)\n        ${column.columnName}: ${column.columnTsType} // $column.columnComment\n#end\n    }\n\n    /**\n     * 用于主页面的 vue reactive()函数使用\n     */\n    export interface Reactive {\n        pageInit: PageInit // 页面配置\n        queryParams: QueryFrom // 页面查询\n        tableList: Options[] // 页面表格列表\n    }\n\n    /**\n     * 用于增改页面的 vue reactive()函数使用\n     */\n    export interface AddUpdateReactive {\n        addUpdatePageInit: AddUpdatePageInit // 页面配置\n        addUpdateForm: AddUpdateForm // 页面查询\n    }\n}\n\n/**\n * 描述 ：  ts 默认变量值\n *\n * @author : ${author}\n **/\nexport namespace ${className}Status {\n    /**\n     * 列表页面 页面配置参数\n     */\n    export const defaultPageInit: ${className}.PageInit = {\n		loading: false, // 遮罩层\n		showSearch: true, // 显示搜索条件\n		ids: [], // 选中数组\n		single: true, // 非单个禁用\n		multiple: true, // 非多个禁用\n		total: 0 // 页面表格列表总数\n    }\n\n    /**\n     * 增改页面 页面参数 默认值\n     */\n    export const defaultAddUpdatePageInit: ${className}.AddUpdatePageInit = {\n		visible: false,\n		title: \'添加${moduleValue}\',\n		buttonTitle: \'添加\',\n		loading: false,\n		saveOrUpdate: true,\n		fullscreen: true\n    }\n\n    /**\n     * 增改页面 表单类型 默认值\n     */\n    export const defaultAddUpdateForm: ${className}.AddUpdateForm = {\n#foreach($column in $editAndSaveIntersectionColumns)\n    	${column.columnName}: #if($column.columnTsType==\'string\')\'\'#elseif($column.columnTsType==\'number\')0#elseif($column.columnTsType==\'boolean\')false#elseif($column.columnTsType==\'number\')0#elseif($column.columnTsType==\'any\')null#elseif($column.columnTsType==\'Date\')new Date()#end#if($foreach.hasNext),#end // $column.columnComment\n#end\n    }\n\n    /**\n     * 增改页面 表单类型 表单校验\n     */\n    export const addUpdateFormRules: FormRules = {\n#foreach($column in $editAndSaveIntersectionColumns)\n        ${column.columnName}: [{ required: true, message: \'${column.columnComment}不能为空\', trigger: \'blur\' }]#if($foreach.hasNext),#end\n#end\n    }\n}\n', 'ts', 'types', '', '1', 2, 'admin', 'admin', '2023-12-06 17:24:29', '2023-12-06 17:24:29', '0');
INSERT INTO `gen_code_template` VALUES ('1732325939402600451', '1731893642481139714', 'MyBatisPlus Wrapper构建器', 'MyBatisPlus Wrapper构建器', 'package ${packageName}.moudle.${moduleLabel}.dao.wrapper;\n\nimport com.baomidou.mybatisplus.core.conditions.query.LambdaQueryWrapper;\nimport com.baomidou.mybatisplus.core.conditions.update.LambdaUpdateWrapper;\nimport com.xht.cloud.framework.core.support.StringUtils;\nimport com.xht.cloud.framework.mybatis.wrapper.EntityWrapper;\nimport ${packageName}.moudle.${moduleLabel}.dao.dataobject.${className}ColumnDO;\nimport org.springframework.util.ObjectUtils;\n\nimport java.util.Objects;\n\n/**\n * 描述 ：${moduleValue}\n *\n * @author : ${author}\n **/\npublic final class ${className}Wrapper implements EntityWrapper<${className}DO> {\n\n    /**\n     * 私有化构造器\n     */\n    private ${className}Wrapper() {\n    }\n\n    /**\n     * 获取实例\n     */\n    public static ${className}Wrapper getInstance() {\n        return Instance.INSTANCE.getInstance();\n    }\n\n    /**\n     * 实例处理化\n     */\n    private enum Instance {\n\n        INSTANCE;\n\n        private final ${className}Wrapper wrapper;\n\n        Instance() {\n            wrapper = new ${className}Wrapper();\n        }\n\n        public ${className}Wrapper getInstance() {\n            return wrapper;\n        }\n    }\n\n    /**\n     * 获取 {@link LambdaQueryWrapper}\n     *\n     * @param entity 实体类\n     * @return {@link LambdaQueryWrapper}\n     */\n    @Override\n    public LambdaQueryWrapper<${className}DO> lambdaQuery(${className}DO entity) {\n        if (Objects.isNull(entity)) {\n            return lambdaQuery();\n        }\n        LambdaQueryWrapper<${className}DO> wrapper = new LambdaQueryWrapper<>();\n        return wrapper\n#foreach ($column in ${queryColumns})\n                .eq(${column.convertMethod}(entity.${column.columnNameGet}()), ${className}DO::${column.columnNameGet}, entity.${column.columnNameGet}())\n#end\n        ;\n    }\n\n    /**\n     * 获取 {@link LambdaUpdateWrapper}\n     *\n     * @param entity 实体类\n     * @return {@link LambdaUpdateWrapper}\n     */\n    @Override\n    public LambdaUpdateWrapper<${className}DO> lambdaUpdate(${className}DO entity) {\n        if (Objects.isNull(entity)) {\n            return lambdaUpdate();\n        }\n        LambdaUpdateWrapper<${className}DO> wrapper = new LambdaUpdateWrapper<>();\n        return wrapper\n#foreach ($column in $editAndSaveIntersectionColumns)\n#if(${column.columnPk} == \'0\')                .set(${className}DO::${column.columnNameGet}, entity.${column.columnNameGet}())\n                #end\n#end\n        ;\n    }\n\n\n}\n', 'java', '{className}Wrapper', '', '1', 3, 'admin', 'admin', '2023-12-06 17:24:29', '2023-12-06 17:24:29', '0');

-- ----------------------------
-- Table structure for gen_column_type
-- ----------------------------
DROP TABLE IF EXISTS `gen_column_type`;
CREATE TABLE `gen_column_type`  (
  `id` varchar(36) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL DEFAULT '0' COMMENT 'id',
  `db_label` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL COMMENT '数据库类型',
  `db_value` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL COMMENT '数据库字段类型',
  `label` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL COMMENT '语言类型',
  `value` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL COMMENT '代码类型',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8mb4 COLLATE = utf8mb4_0900_ai_ci COMMENT = '代码生成器-字段类型对应表' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of gen_column_type
-- ----------------------------
INSERT INTO `gen_column_type` VALUES ('1732681997232992260', 'MySql', 'timestamp', 'Java', 'java.time.LocalDateTime');
INSERT INTO `gen_column_type` VALUES ('1732681997232992261', 'MySql', 'longtext', 'Java', 'String');
INSERT INTO `gen_column_type` VALUES ('1732681997300101122', 'MySql', 'mediumtext', 'Java', 'String');
INSERT INTO `gen_column_type` VALUES ('1732681997300101123', 'MySql', 'text', 'Java', 'String');
INSERT INTO `gen_column_type` VALUES ('1732681997300101124', 'MySql', 'tinytext', 'Java', 'String');
INSERT INTO `gen_column_type` VALUES ('1732681997300101125', 'MySql', 'varchar', 'Java', 'String');
INSERT INTO `gen_column_type` VALUES ('1732681997367209985', 'MySql', 'char', 'Java', 'String');
INSERT INTO `gen_column_type` VALUES ('1732681997367209986', 'MySql', 'bit', 'Java', 'Boolean');
INSERT INTO `gen_column_type` VALUES ('1732681997367209987', 'MySql', 'decimal', 'Java', 'java.math.BigDecimal');
INSERT INTO `gen_column_type` VALUES ('1732681997367209988', 'MySql', 'double', 'Java', 'Double');
INSERT INTO `gen_column_type` VALUES ('1732681997367209989', 'MySql', 'float', 'Java', 'Float');
INSERT INTO `gen_column_type` VALUES ('1732681997430124546', 'MySql', 'bigint', 'Java', 'Long');
INSERT INTO `gen_column_type` VALUES ('1732681997430124547', 'MySql', 'integer', 'Java', 'Integer');
INSERT INTO `gen_column_type` VALUES ('1732681997430124548', 'MySql', 'int', 'Java', 'Integer');
INSERT INTO `gen_column_type` VALUES ('1732681997430124549', 'MySql', 'mediumint', 'Java', 'Integer');
INSERT INTO `gen_column_type` VALUES ('1732681997430124550', 'MySql', 'smallint', 'Java', 'Integer');
INSERT INTO `gen_column_type` VALUES ('1732681997497233409', 'MySql', 'tinyint', 'Java', 'Integer');
INSERT INTO `gen_column_type` VALUES ('1732681997497233410', 'MySql', 'date', 'Java', 'java.time.LocalDateTime');
INSERT INTO `gen_column_type` VALUES ('1732681997497233411', 'MySql', 'datetime', 'Java', 'java.time.LocalDateTime');
INSERT INTO `gen_column_type` VALUES ('1732683864474226690', 'MySql', 'timestamp', 'TS', 'Date');
INSERT INTO `gen_column_type` VALUES ('1732683864474226691', 'MySql', 'longtext', 'TS', 'string');
INSERT INTO `gen_column_type` VALUES ('1732683864474226692', 'MySql', 'mediumtext', 'TS', 'string');
INSERT INTO `gen_column_type` VALUES ('1732683864532946945', 'MySql', 'text', 'TS', 'string');
INSERT INTO `gen_column_type` VALUES ('1732683864532946946', 'MySql', 'tinytext', 'TS', 'string');
INSERT INTO `gen_column_type` VALUES ('1732683864532946947', 'MySql', 'varchar', 'TS', 'string');
INSERT INTO `gen_column_type` VALUES ('1732683864532946948', 'MySql', 'char', 'TS', 'string');
INSERT INTO `gen_column_type` VALUES ('1732683864532946949', 'MySql', 'bit', 'TS', 'boolean');
INSERT INTO `gen_column_type` VALUES ('1732683864600055810', 'MySql', 'decimal', 'TS', 'number');
INSERT INTO `gen_column_type` VALUES ('1732683864600055811', 'MySql', 'double', 'TS', 'number');
INSERT INTO `gen_column_type` VALUES ('1732683864600055812', 'MySql', 'float', 'TS', 'number');
INSERT INTO `gen_column_type` VALUES ('1732683864600055813', 'MySql', 'bigint', 'TS', 'number');
INSERT INTO `gen_column_type` VALUES ('1732683864600055814', 'MySql', 'integer', 'TS', 'number');
INSERT INTO `gen_column_type` VALUES ('1732683864667164674', 'MySql', 'int', 'TS', 'number');
INSERT INTO `gen_column_type` VALUES ('1732683864667164675', 'MySql', 'mediumint', 'TS', 'number');
INSERT INTO `gen_column_type` VALUES ('1732683864667164676', 'MySql', 'smallint', 'TS', 'number');
INSERT INTO `gen_column_type` VALUES ('1732683864667164677', 'MySql', 'tinyint', 'TS', 'number');
INSERT INTO `gen_column_type` VALUES ('1732683864734273538', 'MySql', 'date', 'TS', 'Date');
INSERT INTO `gen_column_type` VALUES ('1732683864734273539', 'MySql', 'datetime', 'TS', 'Date');

-- ----------------------------
-- Table structure for gen_database
-- ----------------------------
DROP TABLE IF EXISTS `gen_database`;
CREATE TABLE `gen_database`  (
  `id` varchar(36) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL COMMENT 'id',
  `conn_name` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '连接名称',
  `db_url` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '数据库连接',
  `db_type` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL COMMENT '数据库类型',
  `db_name` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL COMMENT '数据库名称',
  `db_describe` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '数据库描述',
  `host` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL COMMENT 'host',
  `port` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL COMMENT '端口',
  `user_name` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL COMMENT '用户名',
  `pass_word` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL COMMENT '密码',
  `status` char(1) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '连接状态 0失败  1成功',
  `sort` int(0) NULL DEFAULT NULL COMMENT '排序',
  `del_flag` char(1) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '是否删除(0未删除1已经删除)',
  `create_by` varchar(64) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '创建者',
  `update_by` varchar(64) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '更新者',
  `create_time` datetime(0) NULL DEFAULT NULL COMMENT '创建时间',
  `update_time` datetime(0) NULL DEFAULT NULL COMMENT '更新时间',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8mb4 COLLATE = utf8mb4_0900_ai_ci COMMENT = '代码生成器-数据源管理' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of gen_database
-- ----------------------------
INSERT INTO `gen_database` VALUES ('1658677643434291201', 'xht-cloud', 'jdbc:mysql://192.168.100.1:3306/xht-cloud?useSSL=false&allowPublicKeyRetrieval=true&useUnicode=true&characterEncoding=utf-8&serverTimezone=GMT%2B8 ', 'MySql', 'xht-cloud', 'jdbc:mysql://192.168.100.1:3306/xht-cloud?useSSL=false&allowPublicKeyRetrieval=true&useUnicode=true&characterEncoding=utf-8&serverTimezone=GMT%2B8 ', '127.0.0.1', '3306', 'root', '123456', '1', 1, '0', 'admin', 'admin', '2023-05-17 11:35:42', '2023-05-17 11:36:03');
INSERT INTO `gen_database` VALUES ('1734390171552043009', 'xht-cloud-generate', 'jdbc:mysql://127.0.0.1:3306/xht-cloud-generate?useSSL=false&allowPublicKeyRetrieval=true&useUnicode=true&characterEncoding=utf-8&serverTimezone=GMT%2B8', 'MySql', 'xht-cloud-generate', 'xht-cloud-generate', '127.0.0.1', '3306', 'root', '123456', '', 1, NULL, NULL, NULL, NULL, NULL);

-- ----------------------------
-- Table structure for gen_table
-- ----------------------------
DROP TABLE IF EXISTS `gen_table`;
CREATE TABLE `gen_table`  (
  `id` varchar(36) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL COMMENT 'id',
  `config_id` varchar(36) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '配置中心',
  `gen_db_id` varchar(36) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '数据源id',
  `table_schema` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL COMMENT '表所在的数据库名称',
  `table_engine` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL COMMENT '数据库引擎',
  `table_name` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL COMMENT '表名称',
  `module_label` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL COMMENT '业务名称',
  `module_value` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL COMMENT '业务描述',
  `module_name` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '业务模块名称',
  `module_desc` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '业务模块描述',
  `authorization_prefix` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '权限前缀',
  `path_url` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL COMMENT 'controller地址前缀',
  `code_name` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL COMMENT '代码名称',
  `gen_type` char(1) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL COMMENT '生成类型',
  `menu_id` varchar(36) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '菜单id',
  `lombok` char(1) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '是否支持权限 1支持',
  `swagger` char(1) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '是否支持权限 1支持',
  `jsr303` char(1) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '是否支持权限 1支持',
  `authorization` char(1) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '是否支持权限 1支持',
  `parent_id` char(1) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '树表的上级id',
  `parent_name` char(1) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '树表的名字',
  `template_type` char(1) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '生成的方式 0单表 1树表',
  `table_create_time` datetime(0) NULL DEFAULT NULL COMMENT '表创建时间',
  `table_update_time` datetime(0) NULL DEFAULT NULL COMMENT '表更新时间',
  `create_by` varchar(100) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '创建者',
  `update_by` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '更新者',
  `create_time` datetime(0) NULL DEFAULT NULL COMMENT '创建时间',
  `update_time` datetime(0) NULL DEFAULT NULL COMMENT '更新时间',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8mb4 COLLATE = utf8mb4_0900_ai_ci COMMENT = '代码生成器-数据库表信息' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of gen_table
-- ----------------------------
INSERT INTO `gen_table` VALUES ('1734391429310484481', '1658796525365985281', '1734390171552043009', 'xht-cloud-generate', 'InnoDB', 'gen_table', 'table', '代码生成器-数据库表信息', 'gen', '代码生成器', 'gen:table', 'gen/table', 'GenTable', '0', '-1', '1', '1', '1', '1', NULL, NULL, '0', '2023-12-12 00:00:00', '2023-12-11 00:00:00', NULL, NULL, '2023-12-12 09:55:15', '2023-12-12 10:13:55');

-- ----------------------------
-- Table structure for gen_table_column
-- ----------------------------
DROP TABLE IF EXISTS `gen_table_column`;
CREATE TABLE `gen_table_column`  (
  `id` varchar(36) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL COMMENT '字段名字',
  `table_id` varchar(36) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL COMMENT '表id',
  `table_schema` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL COMMENT '表所在的数据库名称',
  `table_name` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL COMMENT '表名称',
  `column_name` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL COMMENT '字段名字',
  `column_length` int(0) NOT NULL COMMENT '字段长度',
  `column_code_name` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL COMMENT '字段名字',
  `column_comment` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL COMMENT '字段描述',
  `column_db_type` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL COMMENT '数据库字段类型',
  `column_java_type` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT 'Java字段类型',
  `column_ts_type` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT 'Ts字段名称',
  `column_example` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '字段值示例',
  `column_query_type` varchar(100) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '查询方式',
  `column_pk` char(1) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT '0' COMMENT '是否主键（1是）',
  `column_list` char(1) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '是否列表（1是）',
  `column_save` char(1) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT '0' COMMENT '是否增加（1是）',
  `column_update` char(1) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT '0' COMMENT '是否修改（1是）',
  `column_query` char(1) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT '0' COMMENT '是否查询（1是）',
  `column_nullable` char(1) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT '0' COMMENT '是否必填（1是）',
  `column_dict` char(1) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '是否字典（1是）',
  `column_html` varchar(100) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '字段显示',
  `column_sort` int(0) NULL DEFAULT NULL COMMENT '字段排序',
  `create_by` varchar(64) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '创建者',
  `update_by` varchar(64) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '更新者',
  `create_time` datetime(0) NULL DEFAULT NULL COMMENT '创建时间',
  `update_time` datetime(0) NULL DEFAULT NULL COMMENT '更新时间',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8mb4 COLLATE = utf8mb4_0900_ai_ci COMMENT = '代码生成业务表字段' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of gen_table_column
-- ----------------------------
INSERT INTO `gen_table_column` VALUES ('1734391429365010434', '1734391429310484481', 'xht-cloud-generate', 'gen_table', 'id', 36, 'id', 'id', 'varchar', 'String', 'string', NULL, 'eq', '1', '0', '0', '1', '0', '1', NULL, 'input', 1, NULL, NULL, '2023-12-12 09:55:15', '2023-12-12 09:55:15');
INSERT INTO `gen_table_column` VALUES ('1734391429365010435', '1734391429310484481', 'xht-cloud-generate', 'gen_table', 'config_id', 36, 'configId', '配置中心', 'varchar', 'String', 'string', NULL, 'eq', '0', '1', '1', '1', '1', '0', NULL, 'input', 2, NULL, NULL, '2023-12-12 09:55:15', '2023-12-12 09:55:15');
INSERT INTO `gen_table_column` VALUES ('1734391429365010436', '1734391429310484481', 'xht-cloud-generate', 'gen_table', 'gen_db_id', 36, 'genDbId', '数据源id', 'varchar', 'String', 'string', NULL, 'eq', '0', '1', '1', '1', '1', '0', NULL, 'input', 3, NULL, NULL, '2023-12-12 09:55:15', '2023-12-12 09:55:15');
INSERT INTO `gen_table_column` VALUES ('1734391429365010437', '1734391429310484481', 'xht-cloud-generate', 'gen_table', 'table_schema', 255, 'tableSchema', '表所在的数据库名称', 'varchar', 'String', 'string', NULL, 'eq', '0', '1', '1', '1', '1', '1', NULL, 'input', 4, NULL, NULL, '2023-12-12 09:55:15', '2023-12-12 09:55:15');
INSERT INTO `gen_table_column` VALUES ('1734391429365010438', '1734391429310484481', 'xht-cloud-generate', 'gen_table', 'table_engine', 255, 'tableEngine', '数据库引擎', 'varchar', 'String', 'string', NULL, 'eq', '0', '1', '1', '1', '1', '1', NULL, 'input', 5, NULL, NULL, '2023-12-12 09:55:15', '2023-12-12 09:55:15');
INSERT INTO `gen_table_column` VALUES ('1734391429365010439', '1734391429310484481', 'xht-cloud-generate', 'gen_table', 'table_name', 255, 'tableName', '表名称', 'varchar', 'String', 'string', NULL, 'eq', '0', '1', '1', '1', '1', '1', NULL, 'input', 6, NULL, NULL, '2023-12-12 09:55:15', '2023-12-12 09:55:15');
INSERT INTO `gen_table_column` VALUES ('1734391429365010440', '1734391429310484481', 'xht-cloud-generate', 'gen_table', 'module_label', 255, 'moduleLabel', '业务名称', 'varchar', 'String', 'string', NULL, 'eq', '0', '1', '1', '1', '1', '1', NULL, 'input', 7, NULL, NULL, '2023-12-12 09:55:15', '2023-12-12 09:55:15');
INSERT INTO `gen_table_column` VALUES ('1734391429365010441', '1734391429310484481', 'xht-cloud-generate', 'gen_table', 'module_value', 255, 'moduleValue', '业务描述', 'varchar', 'String', 'string', NULL, 'eq', '0', '1', '1', '1', '1', '1', NULL, 'input', 8, NULL, NULL, '2023-12-12 09:55:15', '2023-12-12 09:55:15');
INSERT INTO `gen_table_column` VALUES ('1734391429365010442', '1734391429310484481', 'xht-cloud-generate', 'gen_table', 'module_name', 255, 'moduleName', '业务模块名称', 'varchar', 'String', 'string', NULL, 'eq', '0', '1', '1', '1', '1', '0', NULL, 'input', 9, NULL, NULL, '2023-12-12 09:55:15', '2023-12-12 09:55:15');
INSERT INTO `gen_table_column` VALUES ('1734391429365010443', '1734391429310484481', 'xht-cloud-generate', 'gen_table', 'module_desc', 255, 'moduleDesc', '业务模块描述', 'varchar', 'String', 'string', NULL, 'eq', '0', '1', '1', '1', '1', '0', NULL, 'input', 10, NULL, NULL, '2023-12-12 09:55:15', '2023-12-12 09:55:15');
INSERT INTO `gen_table_column` VALUES ('1734391429365010444', '1734391429310484481', 'xht-cloud-generate', 'gen_table', 'authorization_prefix', 255, 'authorizationPrefix', '权限前缀', 'varchar', 'String', 'string', NULL, 'eq', '0', '1', '1', '1', '1', '0', NULL, 'input', 11, NULL, NULL, '2023-12-12 09:55:15', '2023-12-12 09:55:15');
INSERT INTO `gen_table_column` VALUES ('1734391429365010445', '1734391429310484481', 'xht-cloud-generate', 'gen_table', 'path_url', 255, 'pathUrl', 'controller地址前缀', 'varchar', 'String', 'string', NULL, 'eq', '0', '1', '1', '1', '1', '1', NULL, 'input', 12, NULL, NULL, '2023-12-12 09:55:15', '2023-12-12 09:55:15');
INSERT INTO `gen_table_column` VALUES ('1734391429365010446', '1734391429310484481', 'xht-cloud-generate', 'gen_table', 'code_name', 255, 'codeName', '代码名称', 'varchar', 'String', 'string', NULL, 'eq', '0', '1', '1', '1', '1', '1', NULL, 'input', 13, NULL, NULL, '2023-12-12 09:55:15', '2023-12-12 09:55:15');
INSERT INTO `gen_table_column` VALUES ('1734391429365010447', '1734391429310484481', 'xht-cloud-generate', 'gen_table', 'gen_type', 1, 'genType', '生成类型', 'char', 'String', 'string', NULL, 'eq', '0', '1', '1', '1', '1', '1', NULL, 'input', 14, NULL, NULL, '2023-12-12 09:55:15', '2023-12-12 09:55:15');
INSERT INTO `gen_table_column` VALUES ('1734391429365010448', '1734391429310484481', 'xht-cloud-generate', 'gen_table', 'menu_id', 36, 'menuId', '菜单id', 'varchar', 'String', 'string', NULL, 'eq', '0', '1', '1', '1', '1', '0', NULL, 'input', 15, NULL, NULL, '2023-12-12 09:55:15', '2023-12-12 09:55:15');
INSERT INTO `gen_table_column` VALUES ('1734391429365010449', '1734391429310484481', 'xht-cloud-generate', 'gen_table', 'lombok', 1, 'lombok', '是否支持权限 1支持', 'char', 'String', 'string', NULL, 'eq', '0', '1', '1', '1', '1', '0', NULL, 'input', 16, NULL, NULL, '2023-12-12 09:55:15', '2023-12-12 09:55:15');
INSERT INTO `gen_table_column` VALUES ('1734391429432119298', '1734391429310484481', 'xht-cloud-generate', 'gen_table', 'swagger', 1, 'swagger', '是否支持权限 1支持', 'char', 'String', 'string', NULL, 'eq', '0', '1', '1', '1', '1', '0', NULL, 'input', 17, NULL, NULL, '2023-12-12 09:55:15', '2023-12-12 09:55:15');
INSERT INTO `gen_table_column` VALUES ('1734391429432119299', '1734391429310484481', 'xht-cloud-generate', 'gen_table', 'jsr303', 1, 'jsr303', '是否支持权限 1支持', 'char', 'String', 'string', NULL, 'eq', '0', '1', '1', '1', '1', '0', NULL, 'input', 18, NULL, NULL, '2023-12-12 09:55:15', '2023-12-12 09:55:15');
INSERT INTO `gen_table_column` VALUES ('1734391429432119300', '1734391429310484481', 'xht-cloud-generate', 'gen_table', 'authorization', 1, 'authorization', '是否支持权限 1支持', 'char', 'String', 'string', NULL, 'eq', '0', '1', '1', '1', '1', '0', NULL, 'input', 19, NULL, NULL, '2023-12-12 09:55:15', '2023-12-12 09:55:15');
INSERT INTO `gen_table_column` VALUES ('1734391429432119301', '1734391429310484481', 'xht-cloud-generate', 'gen_table', 'parent_id', 1, 'parentId', '树表的上级id', 'char', 'String', 'string', NULL, 'eq', '0', '1', '1', '1', '1', '0', NULL, 'input', 20, NULL, NULL, '2023-12-12 09:55:15', '2023-12-12 09:55:15');
INSERT INTO `gen_table_column` VALUES ('1734391429432119302', '1734391429310484481', 'xht-cloud-generate', 'gen_table', 'parent_name', 1, 'parentName', '树表的名字', 'char', 'String', 'string', NULL, 'eq', '0', '1', '1', '1', '1', '0', NULL, 'input', 21, NULL, NULL, '2023-12-12 09:55:15', '2023-12-12 09:55:15');
INSERT INTO `gen_table_column` VALUES ('1734391429432119303', '1734391429310484481', 'xht-cloud-generate', 'gen_table', 'template_type', 1, 'templateType', '生成的方式 0单表 1树表', 'char', 'String', 'string', NULL, 'eq', '0', '1', '1', '1', '1', '0', NULL, 'input', 22, NULL, NULL, '2023-12-12 09:55:15', '2023-12-12 09:55:15');
INSERT INTO `gen_table_column` VALUES ('1734391429432119304', '1734391429310484481', 'xht-cloud-generate', 'gen_table', 'table_create_time', 0, 'tableCreateTime', '表创建时间', 'datetime', 'java.time.LocalDateTime', 'Date', NULL, 'eq', '0', '1', '1', '1', '1', '0', NULL, 'input', 23, NULL, NULL, '2023-12-12 09:55:15', '2023-12-12 09:55:15');
INSERT INTO `gen_table_column` VALUES ('1734391429432119305', '1734391429310484481', 'xht-cloud-generate', 'gen_table', 'table_update_time', 0, 'tableUpdateTime', '表更新时间', 'datetime', 'java.time.LocalDateTime', 'Date', NULL, 'eq', '0', '1', '1', '1', '1', '0', NULL, 'input', 24, NULL, NULL, '2023-12-12 09:55:15', '2023-12-12 09:55:15');
INSERT INTO `gen_table_column` VALUES ('1734391429432119306', '1734391429310484481', 'xht-cloud-generate', 'gen_table', 'create_by', 100, 'createBy', '创建者', 'varchar', 'String', 'string', NULL, 'eq', '0', '0', '0', '0', '0', '0', NULL, 'input', 25, NULL, NULL, '2023-12-12 09:55:15', '2023-12-12 09:55:15');
INSERT INTO `gen_table_column` VALUES ('1734391429432119307', '1734391429310484481', 'xht-cloud-generate', 'gen_table', 'update_by', 255, 'updateBy', '更新者', 'varchar', 'String', 'string', NULL, 'eq', '0', '0', '0', '0', '0', '0', NULL, 'input', 26, NULL, NULL, '2023-12-12 09:55:15', '2023-12-12 09:55:15');
INSERT INTO `gen_table_column` VALUES ('1734391429432119308', '1734391429310484481', 'xht-cloud-generate', 'gen_table', 'create_time', 0, 'createTime', '创建时间', 'datetime', 'java.time.LocalDateTime', 'Date', NULL, 'eq', '0', '0', '0', '0', '0', '0', NULL, 'input', 27, NULL, NULL, '2023-12-12 09:55:15', '2023-12-12 09:55:15');
INSERT INTO `gen_table_column` VALUES ('1734391429432119309', '1734391429310484481', 'xht-cloud-generate', 'gen_table', 'update_time', 0, 'updateTime', '更新时间', 'datetime', 'java.time.LocalDateTime', 'Date', NULL, 'eq', '0', '0', '0', '0', '0', '0', NULL, 'input', 28, NULL, NULL, '2023-12-12 09:55:15', '2023-12-12 09:55:15');

SET FOREIGN_KEY_CHECKS = 1;
